{"version":3,"sources":["PaginatedTable.js","Chart.js","App.js","index.js"],"names":["PaginatedTable","data","columns","useTable","initialState","pageIndex","hiddenColumns","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","className","onClick","disabled","length","type","defaultValue","onChange","e","target","value","Number","style","width","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontSize","header","row","i","getRowProps","cells","cell","getCellProps","fontWeight","render","Chart","api","options","responsive","maintainAspectRatio","backgroundColor","legend","display","scales","xAxes","ticks","callback","substr","App","useState","apiData","setApiData","setColumns","chartData","setChartData","setApi","setDimensions","identifiers","setIdentifiers","tabIndex","setTabIndex","bankURL","ecomURL","setup_table","c","console","log","Object","keys","forEach","x","push","accessor","OrderedColumns","topImpact","item","string","avg_duration_impact","ItemTotalPrice_impact","sort","slice","cdata","labels","datasets","label","borderWidth","get_dimensions","datum","ids","dims","dim","split","y","includes","trim","key","min","max","replace","val","useEffect","clear","axios","get","then","catch","err","filtertedData","filter","Tabular","selectedIndex","onSelect","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ec2cef2e.chunk.js","sourcesContent":["import React from \"react\";\nimport { useTable, usePagination } from \"react-table\";\n\nexport default function PaginatedTable({ data, columns }) {\n    // Use the state and functions returned from useTable to build your UI\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page, // Instead of using 'rows', we'll use page,\n        // which has only the rows for the active page\n\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize },\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: {\n                pageIndex: 0,\n                hiddenColumns: [\n                    \"avg_duration_val_g1\",\n                    \"avg_duration_val_g2\",\n                    \"ItemTotalPrice_val_g1\",\n                    \"ItemTotalPrice_val_g2\",\n                ],\n            },\n        },\n        usePagination\n    );\n    return (\n        <div className=\"paginatedTable\">\n            <br />\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                    {\"<<\"}\n                </button>{\" \"}\n                <button\n                    onClick={() => previousPage()}\n                    disabled={!canPreviousPage}\n                >\n                    {\"<\"}\n                </button>{\" \"}\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    {\">\"}\n                </button>{\" \"}\n                <button\n                    onClick={() => gotoPage(pageCount - 1)}\n                    disabled={!canNextPage}\n                >\n                    {\">>\"}\n                </button>{\" \"}\n                <span>\n                    Page{\" \"}\n                    <strong>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </strong>{\" \"}\n                </span>\n                <span>\n                    | Go to page:{\" \"}\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={(e) => {\n                            const page = e.target.value\n                                ? Number(e.target.value) - 1\n                                : 0;\n                            gotoPage(page);\n                        }}\n                        style={{ width: \"100px\" }}\n                    />\n                </span>{\" \"}\n                <select\n                    value={pageSize}\n                    onChange={(e) => {\n                        setPageSize(Number(e.target.value));\n                    }}\n                >\n                    {[10, 20, 30, 40, 50].map((pageSize) => (\n                        <option key={pageSize} value={pageSize}>\n                            Show {pageSize}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <br />\n            <table {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column) => (\n                                <th\n                                    {...column.getHeaderProps()}\n                                    style={{\n                                        borderBottom: \"solid 3px red\",\n                                        background: \"aliceblue\",\n                                        color: \"black\",\n                                        fontSize: \"13px\",\n                                    }}\n                                >\n                                    {<p>{column.header}</p>}\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n\n                <tbody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map((cell) => {\n                                    return (\n                                        <td\n                                            {...cell.getCellProps()}\n                                            style={{\n                                                color:\n                                                    cell.column.header ==\n                                                    \"Net Impact\"\n                                                        ? cell.value < 0\n                                                            ? \"#E74C3C\"\n                                                            : \"#27AE60\"\n                                                        : \"black\",\n                                                borderBottom: \"1px solid black\",\n                                                fontSize: \"13px\",\n                                                fontWeight: \"bolder\",\n                                            }}\n                                        >\n                                            {cell.render(\"Cell\")}\n                                        </td>\n                                    );\n                                })}\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport { Bar } from \"react-chartjs-2\";\n\nexport default function Chart({ data, api }) {\n    return (\n        <Bar\n            data={data}\n            options={{\n                responsive: true,\n                maintainAspectRatio: true,\n                backgroundColor: \"rgb(255,0,0,0)\",\n                legend: {\n                    display: true,\n                },\n                scales: {\n                    xAxes: [\n                        {\n                            ticks: {\n                                display: false,\n                                callback: function (value) {\n                                    return value.substr(0, 3); //truncate\n                                },\n                            },\n                        },\n                    ],\n                },\n            }}\n        />\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport PaginatedTable from \"./PaginatedTable\";\nimport Chart from \"./Chart\";\n\nimport \"./style.css\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nexport default function App() {\n    let [apiData, setApiData] = useState(null);\n    let [columns, setColumns] = useState([]);\n    let [chartData, setChartData] = useState(null);\n    let [api, setApi] = useState(\"banking\");\n    let [dimensions, setDimensions] = useState({});\n    let [identifiers, setIdentifiers] = useState([]);\n    const [tabIndex, setTabIndex] = useState(0);\n\n    let bankURL =\n        process.env.NODE_ENV !== \"production\"\n            ? \"http://localhost:1234/bank\"\n            : \"https://mocki.io/v1/c99c382d-9952-4452-a860-02f0e7f01449\";\n    let ecomURL =\n        process.env.NODE_ENV !== \"production\"\n            ? \"http://localhost:1234/ecom\"\n            : \"https://mocki.io/v1/f8e89695-6f41-4e1c-b5e4-bfd9d7ddffa4\";\n\n    useEffect(() => {\n        console.clear();\n        axios\n            .get(api === \"banking\" ? bankURL : ecomURL)\n            .then((data) => {\n                console.log(data.data);\n                if (data.data) {\n                    setApiData(data.data);\n                    console.log(\"got data\");\n                    get_dimensions(data.data);\n                    setup_table(data.data);\n                }\n            })\n            .catch((err) => console.log(err));\n    }, []);\n\n    useEffect(() => {\n        setTabIndex(0);\n        console.clear();\n        axios\n            .get(api === \"banking\" ? bankURL : ecomURL)\n            .then((data) => {\n                console.log(data.data);\n                if (data.data) {\n                    setApiData(data.data);\n                    console.log(\"got data\");\n                    get_dimensions(data.data);\n                    setup_table(data.data);\n                }\n            })\n            .catch((err) => console.log(err));\n    }, [api]);\n\n    useEffect(() => {\n        if (tabIndex == 0) {\n            axios\n                .get(api === \"banking\" ? bankURL : ecomURL)\n                .then((data) => {\n                    console.log(data.data);\n                    if (data.data) {\n                        setApiData(data.data);\n                        console.log(\"got data\");\n                        get_dimensions(data.data);\n                        setup_table(data.data);\n                    }\n                })\n                .catch((err) => console.log(err));\n        } else {\n            console.log(apiData);\n\n            if (!apiData.length) {\n                console.log(\"fetching data again\");\n                axios\n                    .get(api === \"banking\" ? bankURL : ecomURL)\n                    .then((data) => {\n                        if (data.data) {\n                            const filtertedData = data.data.filter((data) =>\n                                data.string.includes(identifiers[tabIndex])\n                            );\n\n                            setApiData(filtertedData);\n                            get_dimensions(data.data);\n                            setup_table(data.data);\n                        }\n                    });\n            }\n\n            const filtertedData = apiData.filter((data) =>\n                data.string.includes(identifiers[tabIndex])\n            );\n\n            setApiData(filtertedData);\n        }\n    }, [tabIndex]);\n\n    function setup_data(apiData) {}\n\n    function setup_table(apiData) {\n        let c = [];\n        if (apiData) {\n            console.log(\"setting up table\");\n            //calculate and set columns\n            Object.keys(apiData[0]).forEach((x) => {\n                c.push({ header: x, accessor: x });\n            });\n\n            c[0].header = \"Sub Population Name\";\n            c[1].header = \"Net Impact\";\n            c[2].header = \"Baseline Subpopulation Size\";\n            c[3].header = \"RCA Subpopulation Size\";\n            c[6].header = \"Baseline Metric\";\n            c[7].header = \"RCA Metric\";\n\n            const OrderedColumns = [\n                c[0],\n                c[6],\n                c[7],\n                c[2],\n                c[3],\n                c[1],\n                c[4],\n                c[5],\n            ];\n\n            setColumns(OrderedColumns);\n\n            var topImpact = apiData\n                .map(function (item) {\n                    return api == \"banking\"\n                        ? [item.string, item.avg_duration_impact]\n                        : [item.string, item.ItemTotalPrice_impact];\n                })\n                .sort()\n                .slice(0, 10);\n\n            let cdata = {\n                labels: [],\n                datasets: [\n                    {\n                        label:\n                            api == \"banking\"\n                                ? \"Top 10 Avg Duration Impact\"\n                                : \"Top 10 Total Price Impact\",\n                        data: [],\n                        backgroundColor: [],\n                        borderWidth: 1,\n                    },\n                ],\n            };\n\n            if (topImpact.length) {\n                topImpact.forEach((item) => {\n                    console.log(\n                        \"🚀 ~ file: App.js ~ line 151 ~ topImpact.forEach ~ item\",\n                        item\n                    );\n\n                    cdata.labels.push(item[0]);\n                    cdata.datasets[0].data.push(item[1]);\n                    cdata.datasets[0].backgroundColor.push(\n                        item[item.length - 1] < 0 ? \"#E74C3C\" : \"#27AE60\"\n                    );\n                });\n            }\n\n            setChartData(cdata);\n        }\n    }\n\n    function random_rgba() {\n        var o = Math.round,\n            r = Math.random,\n            s = 255;\n        return (\n            \"rgba(\" +\n            o(r() * s) +\n            \",\" +\n            o(r() * s) +\n            \",\" +\n            o(r() * s) +\n            \",\" +\n            r().toFixed(1) +\n            \")\"\n        );\n    }\n\n    function get_dimensions(datum) {\n        let ids = [\"All\"];\n        let dims = {};\n\n        if (datum) {\n            if (api == \"banking\") {\n                console.log(\"processing banking\");\n                for (let i = 0; i < datum.length; i++) {\n                    let dim = datum[i].string.split(/[=&]+/);\n                    for (let y = 0; y < dim.length; y++) {\n                        if (y % 2 === 0) {\n                            if (!ids.includes(dim[y].trim())) {\n                                ids.push(dim[y].trim());\n                            }\n                        }\n                    }\n                }\n\n                ids.forEach((i) => (dims[i] = []));\n\n                for (let i = 0; i < datum.length; i++) {\n                    let dim = datum[i].string.split(/[=&]+/);\n\n                    for (let x = 0; x < dim.length; x++) {\n                        if (ids.includes(dim[x].trim())) {\n                            let key = dim[x].trim();\n                            if (!dims[key].includes(dim[x + 1].trim())) {\n                                dims[key].push(dim[x + 1].trim());\n                            }\n                        }\n                    }\n                }\n                console.log(\"set bank\", identifiers);\n            } else {\n                console.log(\"processing ecommerce\");\n                //get identifiers\n                for (let i = 0; i < datum.length; i++) {\n                    let dim = datum[i].string.split(/[&]+/);\n\n                    for (let y = 0; y < dim.length; y++) {\n                        if (dim[y].includes(\"<\")) {\n                            dim = dim[y].split(\"<\");\n\n                            // console.log(dim);\n                            // [ \"3.75 \", \" UnitPrice \", \"= 8142.75 \" ]\n\n                            for (let x = 0; x < dim.length; x++) {\n                                if (x == 1) {\n                                    let key = dim[x].trim();\n                                    // console.log(key);\n                                    if (!ids.includes(key)) {\n                                        ids.push(key);\n                                    }\n                                }\n                            }\n                        } else {\n                            dim = dim[y].split(\"=\");\n                            if (dim.length > 1) {\n                                for (let x = 0; x < dim.length; x++) {\n                                    if (\n                                        x == 0 &&\n                                        !ids.includes(dim[x].trim())\n                                    ) {\n                                        ids.push(dim[x].trim());\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // allocate dimensions array\n                ids.forEach((i) => (dims[i] = []));\n\n                // populate dimensions\n                for (let i = 0; i < datum.length; i++) {\n                    let dim = datum[i].string.split(/[&]+/);\n\n                    for (let y = 0; y < dim.length; y++) {\n                        if (dim[y].includes(\"<\")) {\n                            dim = dim[y].split(\"<\");\n\n                            // console.log(dim);\n                            // [ \"3.75 \", \" UnitPrice \", \"= 8142.75 \" ]\n\n                            for (let x = 0; x < dim.length; x++) {\n                                if (x == 1) {\n                                    let key = dim[x].trim();\n                                    // console.log(key);\n                                    dims[key].push({\n                                        min: dim[x - 1].trim(),\n                                        max: dim[x + 1].replace(\"=\", \"\").trim(),\n                                    });\n                                }\n                            }\n                        } else {\n                            dim = dim[y].split(\"=\");\n                            if (dim.length > 1) {\n                                for (let x = 0; x < dim.length; x++) {\n                                    if (x == 0) {\n                                        let key = dim[x].trim();\n                                        let val = dim[x + 1].trim();\n                                        if (!dims[key].includes(val)) {\n                                            dims[key].push(val);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                console.log(\"set ecomm\", identifiers);\n            }\n\n            console.log(\"setting ids dims\", ids, dims);\n            setIdentifiers(ids);\n            setDimensions(dims);\n        }\n\n        return;\n    }\n\n    const Tabular = () => {\n        return (\n            identifiers && (\n                <>\n                    <br />\n                    <Tabs\n                        selectedIndex={tabIndex}\n                        onSelect={(tabIndex) => setTabIndex(tabIndex)}\n                    >\n                        <TabList>\n                            {identifiers.map((i) => (\n                                <Tab key={i}>{i}</Tab>\n                            ))}\n                            <Tab>Chart</Tab>\n                        </TabList>\n\n                        {identifiers.map((i) => (\n                            <TabPanel key={i}>\n                                <PaginatedTable\n                                    data={apiData}\n                                    columns={columns}\n                                />\n                            </TabPanel>\n                        ))}\n                        <TabPanel>\n                            <div className=\"chart\">\n                                <Chart data={chartData} {...api} />\n                                <br />\n                            </div>\n                        </TabPanel>\n                    </Tabs>\n                </>\n            )\n        );\n    };\n\n    return columns.length ? (\n        <>\n            <div className=\"selectApi\">\n                <button onClick={() => setApi(\"banking\")}>\n                    Bank-Marketing\n                </button>{\" \"}\n                &nbsp;\n                <button onClick={() => setApi(\"ecommerce\")}>E-Commerce</button>\n                <br />\n            </div>\n            <div className=\"container\">\n                <div className=\"table\">\n                    {identifiers.length ? <Tabular /> : <p>Processing...</p>}\n                </div>\n            </div>\n        </>\n    ) : (\n        \"loading...\"\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}